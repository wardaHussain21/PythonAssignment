{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Add  {'First Name': 'Warda', 'Last Name': 'Shadab', 'Age': 20, 'City': 'Karachi', 'Qualification': 'Intermediate'}\n",
      "Update  {'First Name': 'Warda', 'Last Name': 'Shadab', 'Age': 20, 'City': 'Karachi', 'Qualification': 'Bachelors'}\n",
      "Delete  {'First Name': 'Warda', 'Last Name': 'Shadab', 'Age': 20, 'City': 'Karachi'}\n"
     ]
    }
   ],
   "source": [
    "#Task no 1 \n",
    "p_info ={\n",
    "    \"First Name\" : \"Warda\",\n",
    "    \"Last Name\"  : \"Shadab\",\n",
    "     \"Age\"       : 20,\n",
    "    \"City\"       : \"Karachi\",\n",
    "}\n",
    "p_info [\"Qualification\"] = \"Intermediate\"\n",
    "print(\"Add \",p_info)\n",
    "p_info.update(Qualification = 'Bachelors' )\n",
    "print(\"Update \",p_info)\n",
    "del p_info [\"Qualification\"]\n",
    "print(\"Delete \",p_info)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Karachi is in Pakistan.\n",
      "  It has a population of about 15741406.\n",
      "  The Mazar-E-Quaid is the most famous.\n",
      "\n",
      "London is in United Kingdom.\n",
      "  It has a population of about 8900000.\n",
      "  The Big Ben is the most famous.\n",
      "\n",
      "Beijing is in China.\n",
      "  It has a population of about 21540000.\n",
      "  The Imperial Palace is the most famous.\n"
     ]
    }
   ],
   "source": [
    "#### Task 2\n",
    "\n",
    "cities = {\n",
    "    'Karachi': {\n",
    "        'country': 'pakistan',\n",
    "        'population': 15741406,\n",
    "        'attraction': 'Mazar-e-Quaid',\n",
    "        },\n",
    "    'London': {\n",
    "        'country': 'United Kingdom',\n",
    "        'population': 8900000,\n",
    "        'attraction': 'Big Ben',\n",
    "        },\n",
    "    'Beijing': {\n",
    "        'country': 'china',\n",
    "        'population': 21540000,\n",
    "        'attraction': 'Imperial palace',\n",
    "        }\n",
    "  \n",
    "    }\n",
    "\n",
    "for city, city_info in cities.items():\n",
    "    country = city_info['country'].title()\n",
    "    population = city_info['population']\n",
    "    attraction = city_info['attraction'].title()\n",
    "\n",
    "    print(\"\\n\" + city.title() + \" is in \" + country + \".\")\n",
    "    print(\"  It has a population of about \" + str(population) + \".\")\n",
    "    print(\"  The \" + attraction + \" is the most famous.\")\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "How old are you?\n",
      "Enter 'quit' when you are finished. 12\n",
      "  Your ticket is $10.\n",
      "How old are you?\n",
      "Enter 'quit' when you are finished. quit\n"
     ]
    }
   ],
   "source": [
    "#### Task 3\n",
    "prompt = \"How old are you?\"\n",
    "prompt += \"\\nEnter 'quit' when you are finished. \"\n",
    "\n",
    "while True:\n",
    "    age = input(prompt)\n",
    "    if age == 'quit':\n",
    "        break\n",
    "    age = int(age)\n",
    "\n",
    "    if age < 3:\n",
    "        print(\"  You get in free!\")\n",
    "    elif age < 13:\n",
    "        print(\"  Your ticket is $10.\")\n",
    "    else:\n",
    "        print(\"  Your ticket is $15.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "One of my favorite book is Namal\n"
     ]
    }
   ],
   "source": [
    "#Task 4\n",
    "def favorite_Book(title):\n",
    "    print(\"One of my favorite book is\",title)\n",
    "favorite_Book(\"Namal\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter a number between 1 to 30 : 21\n",
      "Your number is high\n",
      "Enter a number between 1 to 30 : 19\n",
      "Your guessed it in 2times\n"
     ]
    }
   ],
   "source": [
    "#Task 5\n",
    "import random\n",
    "hidden =  random.randint(1,30)\n",
    "number_of_guesses = 0\n",
    "while number_of_guesses < 3:\n",
    "    guess = int(input(\"Enter a number between 1 to 30 : \"))\n",
    "    number_of_guesses += 1\n",
    "    if guess < hidden:\n",
    "        print(\"your number is low\")\n",
    "    if guess > hidden:\n",
    "        print(\"Your number is high\")\n",
    "    if guess == hidden:\n",
    "        break\n",
    "if guess == hidden:\n",
    "    print(\"Your guessed it in \" +str(number_of_guesses) + \"times\")\n",
    "else:\n",
    "    print(\"The number was\" + str(hidden)+\" number\")\n",
    "    print(\"Come Back Later\")\n",
    "        \n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
